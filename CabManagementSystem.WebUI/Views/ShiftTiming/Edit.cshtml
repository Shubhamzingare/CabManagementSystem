@using CabManagementSystem.Domain.Entities
@model CabManagementSystem.Domain.Entities.ShiftTiming

@{
    ViewBag.Title = "Edit Shifts";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}



    @using (Html.BeginForm("Edit", "ShiftTiming", FormMethod.Post))

    {
        @Html.Raw(ViewBag.ErrorMessage)

        <div class="container py-5 h-100 ">

            <div class="row g-0">
                <span id="d1" style="margin-top:20px; font-size:130%">

                    <b style="margin-left:38%;align-self:center">Edit @Model.ShiftName Shift</b>

                </span>
                <hr />
                <div class="col-lg-6" style="float:none;margin:auto;">

                    <div class="card-body p-md-5 mx-md-4" style="margin-left:35%">

                        <div class="form-outline mb-4">
                            <label for="shiftId"><b>Shift ID</b></label>
                            @Html.EditorFor(model => model.shiftId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.shiftId, "", new { @style = "color:white" })
                        </div>

                        <div class="form-outline mb-4">
                            <label for="ShiftName"><b>Shift Name</b></label>
                            @Html.DropDownListFor(m => m.ShiftName,
                                        new SelectList(Enum.GetValues(typeof(Shifts))),
                                        "Select Shift", new { @class = "form-control dropdown-content fa" })
                            @Html.ValidationMessageFor(model => model.ShiftName, "", new { @style = "color:white" })
                        </div>

                        <div class="form-outline mb-4">
                            <label for="shiftStartTime"><b>Start time</b></label>
                            @Html.EditorFor(model => model.shiftStartTime, new { htmlAttributes = new { @class = "form-control time", } })
                            @Html.ValidationMessageFor(model => model.shiftStartTime, "", new { @style = "color:white" })
                        </div>

                        <div class="form-outline mb-4">
                            <label for="shiftEndTime"><b>Dispatch time</b></label>
                            @Html.EditorFor(model => model.shiftEndTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.shiftEndTime, "", new { @style = "color:white" })
                        </div>

                        <div class="form-outline mb-4">
                            <label for="totalBatches"><b>Total no of batches</b></label>
                            @Html.EditorFor(model => model.totalBatches, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.totalBatches, "", new { @style = "color:white" })
                        </div>

                    </div>
                </div>
                @*============================*@
            </div>
            <div class="text-center pt-1 mb-5 pb-1">
                <button class="btn btn-primary button-29 btn-block fa-lg gradient-custom-2 mb-3" type="submit">
                    Save
                </button>
                &nbsp;&nbsp;&nbsp;
                <button class="btn btn-dark button-29 btn-block fa-lg mb-3" type="reset">
                    Cancel
                </button>
            </div>
        </div>

    }





